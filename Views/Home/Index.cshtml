@model FileDelivery.Models.EntryViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center pb-5">
    <h1 class="display-2">Welcome to File Delivery</h1>
</div>
<form asp-action="Index" asp-antiforgery="true" asp-controller="Home"
      enctype="multipart/form-data" onsubmit="AJAXSubmit(this); return false;"
      method="post">

    <div class="p-3 alert alert-info">
        <div class="h6 text-muted col-12">Transaction ID</div>
        <div class="h4 col-12">
            @TempData.Peek("TranxID")
        </div>
    </div>

    @Html.Hidden("TransactionID", TempData["TranxID"])

    <div class="row">
        <div class="col">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        </div>
    </div>

    <div class="form-row">

        <div class="form-group col-md-6">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control" autocomplete="name">
            <span asp-validation-for="Name" class="text-danger form-text"></span>
        </div>

        <div class="form-group col-md-6">
            <label asp-for="EmailAddress"></label>
            <input asp-for="EmailAddress" autocomplete="email" class="form-control">
            <span class="text-danger form-text" asp-validation-for="EmailAddress"></span>
        </div>

    </div>

    <div class="form-row">

        <div class="form-group col-md-6">
            <label asp-for="PhoneNumber"></label>
            <input asp-for="PhoneNumber" autocomplete="tel" class="form-control">
            <span class="text-danger form-text" asp-validation-for="PhoneNumber"></span>
        </div>

        <div class="form-group col-md-6">
            <label asp-for="Age"></label>
            <input asp-for="Age" autocomplete="off" class="form-control">
            <span class="text-danger form-text" asp-validation-for="Age"></span>
        </div>

    </div>

    <div class="form-group">
        @*
            <input asp-for="Files" type="file" class="custom-file-input" multiple>
            <label asp-for="Files"></label>
            <span asp-validation-for="Files" class="text-danger form-text"></span>
        *@
        <label asp-for="Files"></label>
        <input asp-for="Files" type="file" class="form-control-file" multiple>
        <span asp-validation-for="Files" class="text-danger form-text"></span>
    </div>

    <div class="form-group">
        <button id="entrySubmit" class="btn btn-outline-dark" type="submit">
            <span hidden id="entrySubmitSpinner" class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>
            Upload
        </button>
    </div>

    <div class="progress progress-striped active">
        <div class="progress-bar progress-bar-success" role="progressbar" id="entryProgressbar" style="width: 0%"></div>
    </div>

    <div style="margin-top:15px">
        <output name="result"></output>
    </div>

</form>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    "use strict";

    function AJAXSubmit(oFormElement) {

        $("#entrySubmit").prop('disabled', true).find("#entrySubmitSpinner").removeProp("hidden");


        console.log(oFormElement.reportValidity(), $(oFormElement).validate() );

        return new Promise((res, rej) => {
            var oReq = new XMLHttpRequest();

            oReq.onload = function (e) {
                // $("#entrySubmit").removeProp('disabled', true).find("#entrySubmitSpinner").prop("hidden", true);
                res(oReq)
            };
            oReq.onerror = oReq.onabort = oReq.ontimeout = () => {
                rej(new Error('Error: Could not process this request!'))
                //$("#entrySubmit").removeProp('disabled', true).find("#entrySubmitSpinner").prop("hidden", true);

                //oFormElement.elements.namedItem("result").value = 'Result: ' + this.status + ' ' + this.statusText;
            };
            oReq.onprogress = function (progress) {
                $("#entryProgressBar").css("width", `${(progress.lengthComputable / progress.total) * 100}%`);
            };
            oReq.open("post", oFormElement.action);
            oReq.send(new FormData(oFormElement));
        })
            .then((xhr) => {
                oFormElement.elements.namedItem("result").value = 'Result: ' + xhr.status + ' ' + xhr.statusText;
            })
            .catch(e => {
                console.log(e);
                oFormElement.elements.namedItem("result").value = e.message;
            })
            .finally(() => {
                $("#entrySubmit").removeProp('disabled').find("#entrySubmitSpinner").prop("hidden", true);
            });

    }
</script>